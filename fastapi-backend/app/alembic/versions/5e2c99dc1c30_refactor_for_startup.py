"""refactor for startup

Revision ID: 5e2c99dc1c30
Revises: 84523adb75ea
Create Date: 2023-02-21 13:11:22.450025

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5e2c99dc1c30'
down_revision = '84523adb75ea'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_book_id', table_name='book')
    op.drop_table('book')
    op.add_column('author', sa.Column('fullname', sa.String(), nullable=True))
    op.add_column('author', sa.Column('username', sa.String(), nullable=False))
    op.add_column('author', sa.Column('email', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'author', ['email'])
    op.create_unique_constraint(None, 'author', ['username'])
    op.drop_column('author', 'age')
    op.drop_column('author', 'firstName')
    op.drop_column('author', 'lastName')
    op.drop_column('author', 'gender')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('author', sa.Column('gender', postgresql.ENUM('male', 'female', name='gender_enum'), autoincrement=False, nullable=True))
    op.add_column('author', sa.Column('lastName', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('author', sa.Column('firstName', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('author', sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'author', type_='unique')
    op.drop_constraint(None, 'author', type_='unique')
    op.drop_column('author', 'email')
    op.drop_column('author', 'username')
    op.drop_column('author', 'fullname')
    op.create_table('book',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('time_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('time_updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], name='book_author_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='book_pkey')
    )
    op.create_index('ix_book_id', 'book', ['id'], unique=False)
    # ### end Alembic commands ###
